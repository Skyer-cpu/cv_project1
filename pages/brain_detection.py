import streamlit as st
from PIL import Image
import requests
from io import BytesIO
from ultralytics import YOLO
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import os
import torch

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Streamlit
st.set_page_config(page_title="–î–µ—Ç–µ–∫—Ü–∏—è –æ–ø—É—Ö–æ–ª–µ–π –º–æ–∑–≥–∞", layout="wide")
st.title("üß† –î–µ—Ç–µ–∫—Ü–∏—è –æ–ø—É—Ö–æ–ª–µ–π –º–æ–∑–≥–∞ (YOLOv8)") # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Å—Ç–∞–µ—Ç—Å—è YOLOv8, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç–∞—è –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ ---
MODEL_DIR = "models"
# –û—Å—Ç–∞–≤–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏ –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ, –Ω–æ –ø–æ–º–Ω–∏–º, —á—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.
MODEL_NAME = "dinara_yolov11_best.pt" 
MODEL_PATH = os.path.join(MODEL_DIR, MODEL_NAME)

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ (—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º) ---
@st.cache_resource
def load_model(path):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥–µ–ª—å YOLO —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—É—Ç–∏.
    –ö—ç—à–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏.
    """
    if not os.path.exists(path):
        st.error(f"–û—à–∏–±–∫–∞: –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏ **{path}**. "
                 f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ '{MODEL_NAME}' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ '{MODEL_DIR}'.")
        return None
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GPU –∏ –≤—ã–±–∏—Ä–∞–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        device = 'cuda' if torch.cuda.is_available() else 'cpu'
        st.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: **{device.upper()}**")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å YOLO
        model = YOLO(path)
        model.to(device) # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –º–æ–¥–µ–ª—å –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
        if model is not None:
            st.success(f"–ú–æ–¥–µ–ª—å '{MODEL_NAME}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –ú–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
            st.info(f"**–í–∞–∂–Ω–æ:** –ï—Å–ª–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π 'Can't get attribute ...', "
                    f"—ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å—é –≤–µ—Ä—Å–∏–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `ultralytics`. "
                    f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, **—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–µ—Ä—Å–∏—é `ultralytics`, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ç–æ–π, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –æ–±—É—á–∞–ª–∞—Å—å –º–æ–¥–µ–ª—å.**")
            return model
        else:
            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å. –í–æ–∑–º–æ–∂–Ω–æ, —Ñ–∞–π–ª –º–æ–¥–µ–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º–æ–π –º–æ–¥–µ–ª—å—é YOLO.")
            return None
    except Exception as e:
        # –ë–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        st.error(f"**–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥–µ–ª–∏:** {str(e)}. "
                 f"–≠—Ç–∞ –æ—à–∏–±–∫–∞ ('Can't get attribute...') —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ **–Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤–µ—Ä—Å–∏–π `ultralytics`**."
                 f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–µ—Ä—Å–∏—è `ultralytics` –≤ –≤–∞—à–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `pip show ultralytics`) "
                 f"—Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –≤–µ—Ä—Å–∏–µ–π, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–π –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏.")
        return None

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
model = load_model(MODEL_PATH)

# ===== –°–µ–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π =====
st.header("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏")
tab1, tab2 = st.tabs(["üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª", "üåê –ü–æ —Å—Å—ã–ª–∫–µ"])

uploaded_files = []
image_url = ""

with tab1:
    uploaded_files = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (JPG, PNG):",
        type=["jpg", "png", "jpeg"],
        accept_multiple_files=True
    )

with tab2:
    image_url = st.text_input("–ò–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (JPG/PNG):")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ URL
imgs = []
if uploaded_files:
    for file in uploaded_files:
        try:
            img = Image.open(file)
            imgs.append(img)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ **{file.name}**: {str(e)}")

if image_url:
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º user-agent –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'}
        response = requests.get(image_url, timeout=10, headers=headers) # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
        response.raise_for_status() # –í—ã–∑—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –ø–ª–æ—Ö–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ HTTP
        img = Image.open(BytesIO(response.content))
        imgs.append(img)
    except requests.exceptions.Timeout:
        st.error("–û—à–∏–±–∫–∞: –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")
    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ: {str(e)}. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞.")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ: {str(e)}")

# ===== –ò–Ω—Ñ–µ—Ä–µ–Ω—Å –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ =====
if model is not None and imgs:
    st.markdown("---")
    st.header("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–µ—Ç–µ–∫—Ü–∏–∏")
    for img in imgs:
        col1, col2 = st.columns(2)
        
        with col1:
            st.image(img, caption="–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_container_width=True)
        
        try:
            # YOLO –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
            with st.spinner("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–µ—Ç–µ–∫—Ü–∏—è..."):
                results = model.predict(img, conf=0.25) # conf - –ø–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏
            
            with col2:
                for r in results:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    if hasattr(r, 'plot'):
                        # plot() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç numpy –º–∞—Å—Å–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω–Ω—ã–º–∏ –±–æ–∫—Å–∞–º–∏
                        annotated_img = r.plot()
                        st.image(annotated_img, caption="–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ—Ç–µ–∫—Ü–∏–∏", use_container_width=True)
                    else:
                        st.warning("–ú–æ–¥–µ–ª—å –Ω–µ —Å–º–æ–≥–ª–∞ —Å–æ–∑–¥–∞—Ç—å –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ—Ç–µ–∫—Ü–∏–∏
                    if len(r.boxes) > 0:
                        st.success(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ **{len(r.boxes)}** –æ–ø—É—Ö–æ–ª–µ–π.")
                        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ –∫–∞–∂–¥–æ–π –æ–ø—É—Ö–æ–ª–∏
                        for i, box in enumerate(r.boxes):
                            conf = box.conf.item() * 100
                            cls = int(box.cls.item())
                            # –í–∞–∂–Ω–æ: model.names –º–æ–∂–µ—Ç –±—ã—Ç—å None, –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω –∫–ª–∞—Å—Å–æ–≤
                            label = model.names[cls] if hasattr(model, 'names') and model.names else f"–ö–ª–∞—Å—Å {cls}" 
                            st.write(f"- –û–ø—É—Ö–æ–ª—å {i+1}: –ö–ª–∞—Å—Å **{label}**, –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å **{conf:.2f}%**")
                    else:
                        st.info("–û–ø—É—Ö–æ–ª–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–∞ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏.")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")

# ===== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –∏ –º–µ—Ç—Ä–∏–∫–∏ =====
st.markdown("---")
with st.expander("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –∏ –º–µ—Ç—Ä–∏–∫–∏"):
    st.markdown("""
    ### **YOLOv8** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –æ–ø—É—Ö–æ–ª–µ–π –Ω–∞ MR-—Å–Ω–∏–º–∫–∞—Ö.

    - üì¶ **–†–∞–∑–º–µ—Ä –æ–±—É—á–∞—é—â–µ–π –≤—ã–±–æ—Ä–∫–∏:** 310 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π 
    - üì¶ **–†–∞–∑–º–µ—Ä –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏:** 75 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π 
    - üîÅ **–≠–ø–æ—Ö–∏ –æ–±—É—á–µ–Ω–∏—è:** 50 —ç–ø–æ—Ö * 3 –º–æ–¥–µ–ª–∏ = 150 
    - üéØ **mAP50:** 0.88 
    - üéØ **mAP50-95:** 0.60
    """)

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    def safe_image_display(image_path, caption):
        try:
            if os.path.exists(image_path):
                img = Image.open(image_path)
                st.image(img, caption=caption, use_container_width=True)
            else:
                st.warning(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {image_path}. "
                           f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –ø—É—Ç–∏ '{image_path}'.")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è **{image_path}**: {str(e)}")

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤
    st.markdown("#### **–ì—Ä–∞—Ñ–∏–∫–∏ –º–µ—Ç—Ä–∏–∫ –æ–±—É—á–µ–Ω–∏—è:**")
    st.markdown("---")
    
    st.markdown("##### **–ì–†–ê–§–ò–ö ‚Ññ1: mAP - –¥–µ—Ç–µ–∫—Ü–∏—è –æ–ø—É—Ö–æ–ª–µ–π –º–æ–∑–≥–∞ (YOLOv8)**")
    safe_image_display("images/dinara_map.jpg", "–ì—Ä–∞—Ñ–∏–∫ mAP")
    
    st.markdown("##### **–ì–†–ê–§–ò–ö ‚Ññ2: box_f1_curve - –¥–µ—Ç–µ–∫—Ü–∏—è –æ–ø—É—Ö–æ–ª–µ–π –º–æ–∑–≥–∞ (YOLOv8)**")
    safe_image_display("images/dinara_BoxF1_curve.png", "F1 Curve –¥–ª—è –±–æ–∫—Å–æ–≤")
    
    st.markdown("##### **–ì–†–ê–§–ò–ö ‚Ññ3: PR-–∫—Ä–∏–≤–∞—è - –¥–µ—Ç–µ–∫—Ü–∏—è –æ–ø—É—Ö–æ–ª–µ–π –º–æ–∑–≥–∞ (YOLOv8)**")
    safe_image_display("images/dinara_BoxPR_curve.png", "PR-–∫—Ä–∏–≤–∞—è –¥–ª—è –±–æ–∫—Å–æ–≤")
    
    st.markdown("##### **–ì–†–ê–§–ò–ö ‚Ññ4: –ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫ - –¥–µ—Ç–µ–∫—Ü–∏—è –æ–ø—É—Ö–æ–ª–µ–π –º–æ–∑–≥–∞ (YOLOv8)**")
    safe_image_display("images/dinara_confusion_matrix.png", "–ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫")


